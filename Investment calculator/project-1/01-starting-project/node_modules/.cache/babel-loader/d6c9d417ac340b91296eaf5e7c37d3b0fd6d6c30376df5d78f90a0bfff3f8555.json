{"ast":null,"code":"var _jsxFileName = \"/Users/ericlee/Desktop/React---The-Complete-Guide-includes-Hooks-React-Router-and-Redux-Second-Edition-main/Section 9 Time to Practice Project/code/project-1/01-starting-project/src/App.jsx\",\n  _s = $RefreshSig$();\nimport logo from './assets/investment-calculator-logo.png';\nimport { Header } from './components/Header';\nimport { InputForm } from './components/InputForm';\nimport { Result } from './components/Result';\nimport { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [result, setResult] = useState([]);\n  const calculateHandler = (currentSavings, yearlyContribution, expectedReturns, duration) => {\n    // Should be triggered when form is submitted\n    // You might not directly want to bind it to the submit event on the form though...\n\n    const yearlyData = []; // per-year results\n\n    // let currentSavings = +userInput['current-savings']; // feel free to change the shape of this input object!\n    // const yearlyContribution = +userInput['yearly-contribution']; // as mentioned: feel free to change the shape...\n    const expectedReturn = expectedReturns / 100;\n    // const duration = +userInput['duration'];\n\n    // The below code calculates yearly results (total savings, interest etc)\n    for (let i = 0; i < duration; i++) {\n      const yearlyInterest = currentSavings * expectedReturn;\n      currentSavings += yearlyInterest + yearlyContribution;\n      yearlyData.push({\n        // feel free to change the shape of the data pushed to the array!\n        year: i + 1,\n        yearlyInterest: yearlyInterest,\n        savingsEndOfYear: currentSavings,\n        yearlyContribution: yearlyContribution\n      });\n    }\n    setResult(yearlyData);\n    // do something with yearlyData ...\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 6\n    }, this), /*#__PURE__*/_jsxDEV(InputForm, {\n      calculate: calculateHandler\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 6\n    }, this), result.length > 0 && /*#__PURE__*/_jsxDEV(Result, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 29\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: result\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"cW0+QCQMA4zTol5H7z5XfVXOO40=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["logo","Header","InputForm","Result","useState","jsxDEV","_jsxDEV","App","_s","result","setResult","calculateHandler","currentSavings","yearlyContribution","expectedReturns","duration","yearlyData","expectedReturn","i","yearlyInterest","push","year","savingsEndOfYear","children","fileName","_jsxFileName","lineNumber","columnNumber","calculate","length","_c","$RefreshReg$"],"sources":["/Users/ericlee/Desktop/React---The-Complete-Guide-includes-Hooks-React-Router-and-Redux-Second-Edition-main/Section 9 Time to Practice Project/code/project-1/01-starting-project/src/App.jsx"],"sourcesContent":["import logo from './assets/investment-calculator-logo.png';\nimport { Header } from './components/Header';\nimport { InputForm } from './components/InputForm';\nimport { Result } from './components/Result';\nimport { useState } from 'react';\nfunction App() {\n\n  const [result, setResult] = useState([])\n\n  const calculateHandler = (currentSavings, yearlyContribution, expectedReturns, duration) => {\n    // Should be triggered when form is submitted\n    // You might not directly want to bind it to the submit event on the form though...\n\n    const yearlyData = []; // per-year results\n\n    // let currentSavings = +userInput['current-savings']; // feel free to change the shape of this input object!\n    // const yearlyContribution = +userInput['yearly-contribution']; // as mentioned: feel free to change the shape...\n    const expectedReturn = expectedReturns / 100;\n    // const duration = +userInput['duration'];\n\n    // The below code calculates yearly results (total savings, interest etc)\n    for (let i = 0; i < duration; i++) {\n      const yearlyInterest = currentSavings * expectedReturn;\n      currentSavings += yearlyInterest + yearlyContribution;\n      yearlyData.push({\n        // feel free to change the shape of the data pushed to the array!\n        year: i + 1,\n        yearlyInterest: yearlyInterest,\n        savingsEndOfYear: currentSavings,\n        yearlyContribution: yearlyContribution,\n      });\n    }\n    setResult(yearlyData)\n    // do something with yearlyData ...\n  };\n\n  return (\n    <div>\n     <Header/>\n     <InputForm calculate={calculateHandler}/>\n      {/* Todo: Show below table conditionally (only once result data is available) */}\n      {/* Show fallback text if no data is available */}\n\n      {result.length > 0 && <Result/>}\n      <p>{result}</p>\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":";;AAAA,OAAOA,IAAI,MAAM,yCAAyC;AAC1D,SAASC,MAAM,QAAQ,qBAAqB;AAC5C,SAASC,SAAS,QAAQ,wBAAwB;AAClD,SAASC,MAAM,QAAQ,qBAAqB;AAC5C,SAASC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AACjC,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EAEb,MAAM,CAACC,MAAM,EAAEC,SAAS,CAAC,GAAGN,QAAQ,CAAC,EAAE,CAAC;EAExC,MAAMO,gBAAgB,GAAGA,CAACC,cAAc,EAAEC,kBAAkB,EAAEC,eAAe,EAAEC,QAAQ,KAAK;IAC1F;IACA;;IAEA,MAAMC,UAAU,GAAG,EAAE,CAAC,CAAC;;IAEvB;IACA;IACA,MAAMC,cAAc,GAAGH,eAAe,GAAG,GAAG;IAC5C;;IAEA;IACA,KAAK,IAAII,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGH,QAAQ,EAAEG,CAAC,EAAE,EAAE;MACjC,MAAMC,cAAc,GAAGP,cAAc,GAAGK,cAAc;MACtDL,cAAc,IAAIO,cAAc,GAAGN,kBAAkB;MACrDG,UAAU,CAACI,IAAI,CAAC;QACd;QACAC,IAAI,EAAEH,CAAC,GAAG,CAAC;QACXC,cAAc,EAAEA,cAAc;QAC9BG,gBAAgB,EAAEV,cAAc;QAChCC,kBAAkB,EAAEA;MACtB,CAAC,CAAC;IACJ;IACAH,SAAS,CAACM,UAAU,CAAC;IACrB;EACF,CAAC;EAED,oBACEV,OAAA;IAAAiB,QAAA,gBACCjB,OAAA,CAACL,MAAM;MAAAuB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAC,CAAC,eACTrB,OAAA,CAACJ,SAAS;MAAC0B,SAAS,EAAEjB;IAAiB;MAAAa,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAC,CAAC,EAIvClB,MAAM,CAACoB,MAAM,GAAG,CAAC,iBAAIvB,OAAA,CAACH,MAAM;MAAAqB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAC,CAAC,eAC/BrB,OAAA;MAAAiB,QAAA,EAAId;IAAM;MAAAe,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACZ,CAAC;AAEV;AAACnB,EAAA,CA1CQD,GAAG;AAAAuB,EAAA,GAAHvB,GAAG;AA4CZ,eAAeA,GAAG;AAAC,IAAAuB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}